// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GrpcArtist.proto

package hcmus.zingmp3.artist;

public final class GrpcArtist {
  private GrpcArtist() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hcmus_zingmp3_artist_ArtistGrpcRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hcmus_zingmp3_artist_ArtistGrpcRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hcmus_zingmp3_artist_ArtistGrpcResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hcmus_zingmp3_artist_ArtistGrpcResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020GrpcArtist.proto\022\024hcmus.zingmp3.artist" +
      "\"\216\002\n\021ArtistGrpcRequest\022\n\n\002id\030\001 \001(\t\022\r\n\005al" +
      "ias\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\022\n\nplaylistId\030\004 " +
      "\001(\t\022\021\n\tthumbnail\030\005 \001(\t\022\023\n\013totalFollow\030\006 " +
      "\001(\005\022\025\n\rsortBiography\030\007 \001(\t\022\021\n\tbiography\030" +
      "\010 \001(\t\022\020\n\010national\030\t \001(\t\022\020\n\010realName\030\n \001(" +
      "\t\022\020\n\010birthday\030\013 \001(\t\022\016\n\006awards\030\014 \003(\t\022\r\n\005s" +
      "ongs\030\r \003(\t\022\025\n\rcomposedSongs\030\016 \003(\t\"\217\002\n\022Ar" +
      "tistGrpcResponse\022\n\n\002id\030\001 \001(\t\022\r\n\005alias\030\002 " +
      "\001(\t\022\014\n\004name\030\003 \001(\t\022\022\n\nplaylistId\030\004 \001(\t\022\021\n" +
      "\tthumbnail\030\005 \001(\t\022\023\n\013totalFollow\030\006 \001(\005\022\025\n" +
      "\rsortBiography\030\007 \001(\t\022\021\n\tbiography\030\010 \001(\t\022" +
      "\020\n\010national\030\t \001(\t\022\020\n\010realName\030\n \001(\t\022\020\n\010b" +
      "irthday\030\013 \001(\t\022\016\n\006awards\030\014 \003(\t\022\r\n\005songs\030\r" +
      " \003(\t\022\025\n\rcomposedSongs\030\016 \003(\t2\337\001\n\021ArtistGr" +
      "pcService\022b\n\rgetArtistById\022\'.hcmus.zingm" +
      "p3.artist.ArtistGrpcRequest\032(.hcmus.zing" +
      "mp3.artist.ArtistGrpcResponse\022f\n\021getOrCr" +
      "eateArtist\022\'.hcmus.zingmp3.artist.Artist" +
      "GrpcRequest\032(.hcmus.zingmp3.artist.Artis" +
      "tGrpcResponseB\002P\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_hcmus_zingmp3_artist_ArtistGrpcRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_hcmus_zingmp3_artist_ArtistGrpcRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hcmus_zingmp3_artist_ArtistGrpcRequest_descriptor,
        new java.lang.String[] { "Id", "Alias", "Name", "PlaylistId", "Thumbnail", "TotalFollow", "SortBiography", "Biography", "National", "RealName", "Birthday", "Awards", "Songs", "ComposedSongs", });
    internal_static_hcmus_zingmp3_artist_ArtistGrpcResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_hcmus_zingmp3_artist_ArtistGrpcResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hcmus_zingmp3_artist_ArtistGrpcResponse_descriptor,
        new java.lang.String[] { "Id", "Alias", "Name", "PlaylistId", "Thumbnail", "TotalFollow", "SortBiography", "Biography", "National", "RealName", "Birthday", "Awards", "Songs", "ComposedSongs", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
