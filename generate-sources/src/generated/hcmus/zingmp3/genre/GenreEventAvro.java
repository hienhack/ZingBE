/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package hcmus.zingmp3.genre;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class GenreEventAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7703217487021623529L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GenreEventAvro\",\"namespace\":\"hcmus.zingmp3.genre\",\"fields\":[{\"name\":\"eventType\",\"type\":\"string\"},{\"name\":\"genre\",\"type\":{\"type\":\"record\",\"name\":\"GenreAvro\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"createdBy\",\"type\":\"string\"},{\"name\":\"createdAt\",\"type\":\"long\"},{\"name\":\"modifiedBy\",\"type\":\"string\"},{\"name\":\"modifiedAt\",\"type\":\"long\"},{\"name\":\"songs\",\"type\":[{\"type\":\"array\",\"items\":\"string\",\"default\":[]},\"null\"]}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<GenreEventAvro> ENCODER =
      new BinaryMessageEncoder<GenreEventAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<GenreEventAvro> DECODER =
      new BinaryMessageDecoder<GenreEventAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<GenreEventAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<GenreEventAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<GenreEventAvro>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this GenreEventAvro to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a GenreEventAvro from a ByteBuffer. */
  public static GenreEventAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence eventType;
  @Deprecated public hcmus.zingmp3.genre.GenreAvro genre;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public GenreEventAvro() {}

  /**
   * All-args constructor.
   * @param eventType The new value for eventType
   * @param genre The new value for genre
   */
  public GenreEventAvro(java.lang.CharSequence eventType, hcmus.zingmp3.genre.GenreAvro genre) {
    this.eventType = eventType;
    this.genre = genre;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return eventType;
    case 1: return genre;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: eventType = (java.lang.CharSequence)value$; break;
    case 1: genre = (hcmus.zingmp3.genre.GenreAvro)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'eventType' field.
   * @return The value of the 'eventType' field.
   */
  public java.lang.CharSequence getEventType() {
    return eventType;
  }

  /**
   * Sets the value of the 'eventType' field.
   * @param value the value to set.
   */
  public void setEventType(java.lang.CharSequence value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'genre' field.
   * @return The value of the 'genre' field.
   */
  public hcmus.zingmp3.genre.GenreAvro getGenre() {
    return genre;
  }

  /**
   * Sets the value of the 'genre' field.
   * @param value the value to set.
   */
  public void setGenre(hcmus.zingmp3.genre.GenreAvro value) {
    this.genre = value;
  }

  /**
   * Creates a new GenreEventAvro RecordBuilder.
   * @return A new GenreEventAvro RecordBuilder
   */
  public static hcmus.zingmp3.genre.GenreEventAvro.Builder newBuilder() {
    return new hcmus.zingmp3.genre.GenreEventAvro.Builder();
  }

  /**
   * Creates a new GenreEventAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new GenreEventAvro RecordBuilder
   */
  public static hcmus.zingmp3.genre.GenreEventAvro.Builder newBuilder(hcmus.zingmp3.genre.GenreEventAvro.Builder other) {
    return new hcmus.zingmp3.genre.GenreEventAvro.Builder(other);
  }

  /**
   * Creates a new GenreEventAvro RecordBuilder by copying an existing GenreEventAvro instance.
   * @param other The existing instance to copy.
   * @return A new GenreEventAvro RecordBuilder
   */
  public static hcmus.zingmp3.genre.GenreEventAvro.Builder newBuilder(hcmus.zingmp3.genre.GenreEventAvro other) {
    return new hcmus.zingmp3.genre.GenreEventAvro.Builder(other);
  }

  /**
   * RecordBuilder for GenreEventAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GenreEventAvro>
    implements org.apache.avro.data.RecordBuilder<GenreEventAvro> {

    private java.lang.CharSequence eventType;
    private hcmus.zingmp3.genre.GenreAvro genre;
    private hcmus.zingmp3.genre.GenreAvro.Builder genreBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(hcmus.zingmp3.genre.GenreEventAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.eventType)) {
        this.eventType = data().deepCopy(fields()[0].schema(), other.eventType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.genre)) {
        this.genre = data().deepCopy(fields()[1].schema(), other.genre);
        fieldSetFlags()[1] = true;
      }
      if (other.hasGenreBuilder()) {
        this.genreBuilder = hcmus.zingmp3.genre.GenreAvro.newBuilder(other.getGenreBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing GenreEventAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(hcmus.zingmp3.genre.GenreEventAvro other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.eventType)) {
        this.eventType = data().deepCopy(fields()[0].schema(), other.eventType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.genre)) {
        this.genre = data().deepCopy(fields()[1].schema(), other.genre);
        fieldSetFlags()[1] = true;
      }
      this.genreBuilder = null;
    }

    /**
      * Gets the value of the 'eventType' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventType() {
      return eventType;
    }

    /**
      * Sets the value of the 'eventType' field.
      * @param value The value of 'eventType'.
      * @return This builder.
      */
    public hcmus.zingmp3.genre.GenreEventAvro.Builder setEventType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.eventType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'eventType' field has been set.
      * @return True if the 'eventType' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'eventType' field.
      * @return This builder.
      */
    public hcmus.zingmp3.genre.GenreEventAvro.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'genre' field.
      * @return The value.
      */
    public hcmus.zingmp3.genre.GenreAvro getGenre() {
      return genre;
    }

    /**
      * Sets the value of the 'genre' field.
      * @param value The value of 'genre'.
      * @return This builder.
      */
    public hcmus.zingmp3.genre.GenreEventAvro.Builder setGenre(hcmus.zingmp3.genre.GenreAvro value) {
      validate(fields()[1], value);
      this.genreBuilder = null;
      this.genre = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'genre' field has been set.
      * @return True if the 'genre' field has been set, false otherwise.
      */
    public boolean hasGenre() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'genre' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public hcmus.zingmp3.genre.GenreAvro.Builder getGenreBuilder() {
      if (genreBuilder == null) {
        if (hasGenre()) {
          setGenreBuilder(hcmus.zingmp3.genre.GenreAvro.newBuilder(genre));
        } else {
          setGenreBuilder(hcmus.zingmp3.genre.GenreAvro.newBuilder());
        }
      }
      return genreBuilder;
    }

    /**
     * Sets the Builder instance for the 'genre' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public hcmus.zingmp3.genre.GenreEventAvro.Builder setGenreBuilder(hcmus.zingmp3.genre.GenreAvro.Builder value) {
      clearGenre();
      genreBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'genre' field has an active Builder instance
     * @return True if the 'genre' field has an active Builder instance
     */
    public boolean hasGenreBuilder() {
      return genreBuilder != null;
    }

    /**
      * Clears the value of the 'genre' field.
      * @return This builder.
      */
    public hcmus.zingmp3.genre.GenreEventAvro.Builder clearGenre() {
      genre = null;
      genreBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public GenreEventAvro build() {
      try {
        GenreEventAvro record = new GenreEventAvro();
        record.eventType = fieldSetFlags()[0] ? this.eventType : (java.lang.CharSequence) defaultValue(fields()[0]);
        if (genreBuilder != null) {
          record.genre = this.genreBuilder.build();
        } else {
          record.genre = fieldSetFlags()[1] ? this.genre : (hcmus.zingmp3.genre.GenreAvro) defaultValue(fields()[1]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<GenreEventAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<GenreEventAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<GenreEventAvro>
    READER$ = (org.apache.avro.io.DatumReader<GenreEventAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
