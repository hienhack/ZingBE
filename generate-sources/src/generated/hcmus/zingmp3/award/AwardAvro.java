/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package hcmus.zingmp3.award;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AwardAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -168426505268963685L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AwardAvro\",\"namespace\":\"hcmus.zingmp3.award\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"artists\",\"type\":[{\"type\":\"array\",\"items\":\"string\"},\"null\"],\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AwardAvro> ENCODER =
      new BinaryMessageEncoder<AwardAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AwardAvro> DECODER =
      new BinaryMessageDecoder<AwardAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<AwardAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<AwardAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AwardAvro>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this AwardAvro to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a AwardAvro from a ByteBuffer. */
  public static AwardAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.util.List<java.lang.CharSequence> artists;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AwardAvro() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param name The new value for name
   * @param artists The new value for artists
   */
  public AwardAvro(java.lang.CharSequence id, java.lang.CharSequence name, java.util.List<java.lang.CharSequence> artists) {
    this.id = id;
    this.name = name;
    this.artists = artists;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return artists;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: artists = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'artists' field.
   * @return The value of the 'artists' field.
   */
  public java.util.List<java.lang.CharSequence> getArtists() {
    return artists;
  }

  /**
   * Sets the value of the 'artists' field.
   * @param value the value to set.
   */
  public void setArtists(java.util.List<java.lang.CharSequence> value) {
    this.artists = value;
  }

  /**
   * Creates a new AwardAvro RecordBuilder.
   * @return A new AwardAvro RecordBuilder
   */
  public static hcmus.zingmp3.award.AwardAvro.Builder newBuilder() {
    return new hcmus.zingmp3.award.AwardAvro.Builder();
  }

  /**
   * Creates a new AwardAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AwardAvro RecordBuilder
   */
  public static hcmus.zingmp3.award.AwardAvro.Builder newBuilder(hcmus.zingmp3.award.AwardAvro.Builder other) {
    return new hcmus.zingmp3.award.AwardAvro.Builder(other);
  }

  /**
   * Creates a new AwardAvro RecordBuilder by copying an existing AwardAvro instance.
   * @param other The existing instance to copy.
   * @return A new AwardAvro RecordBuilder
   */
  public static hcmus.zingmp3.award.AwardAvro.Builder newBuilder(hcmus.zingmp3.award.AwardAvro other) {
    return new hcmus.zingmp3.award.AwardAvro.Builder(other);
  }

  /**
   * RecordBuilder for AwardAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AwardAvro>
    implements org.apache.avro.data.RecordBuilder<AwardAvro> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence name;
    private java.util.List<java.lang.CharSequence> artists;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(hcmus.zingmp3.award.AwardAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.artists)) {
        this.artists = data().deepCopy(fields()[2].schema(), other.artists);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AwardAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(hcmus.zingmp3.award.AwardAvro other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.artists)) {
        this.artists = data().deepCopy(fields()[2].schema(), other.artists);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public hcmus.zingmp3.award.AwardAvro.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public hcmus.zingmp3.award.AwardAvro.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public hcmus.zingmp3.award.AwardAvro.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public hcmus.zingmp3.award.AwardAvro.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'artists' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getArtists() {
      return artists;
    }

    /**
      * Sets the value of the 'artists' field.
      * @param value The value of 'artists'.
      * @return This builder.
      */
    public hcmus.zingmp3.award.AwardAvro.Builder setArtists(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[2], value);
      this.artists = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'artists' field has been set.
      * @return True if the 'artists' field has been set, false otherwise.
      */
    public boolean hasArtists() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'artists' field.
      * @return This builder.
      */
    public hcmus.zingmp3.award.AwardAvro.Builder clearArtists() {
      artists = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AwardAvro build() {
      try {
        AwardAvro record = new AwardAvro();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.artists = fieldSetFlags()[2] ? this.artists : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AwardAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<AwardAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AwardAvro>
    READER$ = (org.apache.avro.io.DatumReader<AwardAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
