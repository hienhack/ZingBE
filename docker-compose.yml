version: '3.8'
services:
  ## Keycloak
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0.3
    command: [ "start-dev", "--import-realm" ]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: mysql
      KC_DB_URL_HOST: mysql-keycloak
      KC_DB_URL_DATABASE: keycloak
      KC_DB_URL_PORT: 3307
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak-secret
    ports:
      - "8080:8080"
    #      - "8443:8443"
    #      - "9990:9990"
    depends_on:
      mysql-keycloak:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import
    networks:
      - zingmp3-net

  ## mysql-keycloak
  mysql-keycloak:
    container_name: mysql-keycloak
    image: mysql
    environment:
      MYSQL_ROOT_HOSTS: '%'
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: keycloak-secret
      MYSQL_ROOT_PASSWORD: supersecret
      MYSQL_TCP_PORT: 3307
    ports:
      - "3307:3307"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
    #      timeout: 20s
    #      retries: 10
    networks:
      - zingmp3-net
    volumes:
      - ./database/mysql-keycloak:/var/lib/mysql
  #volumes:
  #  mysql-volume:
  #    driver: local

  mysql-song:
    container_name: mysql-song
    image: mysql
    environment:
      MYSQL_ROOT_HOSTS: '%'
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: song_service
      MYSQL_USER: zingmp3
      MYSQL_PASSWORD: zingmp3
      MYSQL_TCP_PORT: 3306
    ports:
      - "3306:3306"
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
    networks:
      - zingmp3-net

  song-service:
    depends_on:
      mysql-song:
        condition: service_healthy
#      discovery-service:
#        condition: service_healthy
    container_name: song-service
#    build:
#      context: ./song-service
#      dockerfile: Dockerfile
    image: ngoxuanchien/song-service:latest
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-song:3306/song_service
#      - EUREKA_CLIENT_SERVICE-URL_DEFAULT-ZONE=http://discovery-service:8761/eureka
    networks:
      - zingmp3-net
#    stdin_open: true
#    tty: true

#  playlist-service:
#    depends_on:
#      - mysql-playlist
#      - discovery-service
#    container_name: ngoxuanchien/playlist-service:latest
#    build:
#      context: ./playlist-service
#
#    image: playlist-service
#    restart: on-failure
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-playlist:3307/playlist_service
#    networks:
#      playlist-service-net:
#    stdin_open: true
#    tty: true

  discovery-service:
    container_name: discovery-service
    depends_on:
      - mysql-song
#    build:
#      context: ./discovery-service
#      dockerfile: Dockerfile
    image: ngoxuanchien/discovery-service:latest
    restart: always
    ports:
      - "8761:8761"
    networks:
      - zingmp3-net

#  search-service:
#    container_name: search-service
#    depends_on:
##      - mysql-playlist
##      - mysql-song
##      - keycloak-mysql
#      - discovery-service
#      - song-service
##      - playlist-service
##    build: ./search-service
#    image: ngoxuanchien/search-service:latest
#    build:
#      context: ./search-service
#      dockerfile: Dockerfile
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
##      - EUREKA_CLIENT_SERVICE-URL_DEFAULT-ZONE=http://discovery-service:8761/eureka
#    restart: always
#    networks:
#      - zingmp3-net

  api-gateway:
    container_name: api-gateway
    depends_on:
#      - mysql-song
#      - keycloak-mysql
#      - discovery-service
#      - song-service
#      - search-service
      mysql-keycloak:
        condition: service_healthy
#    build:
#      context: ./api-gateway
#      dockerfile: Dockerfile
    image: ngoxuanchien/api-gateway:latest
    restart: always
    ports:
      - "8081:8081"
    networks:
      - zingmp3-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  user-service:
    depends_on:
      - keycloak
    container_name: user-service
    image: ngoxuanchien/user-service:latest
#    build:
#      context: ./user-service
#      dockerfile: Dockerfile
    restart: always
    environment:
#      - EUREKA_CLIENT_SERVICE-URL_DEFAULT-ZONE=http://discovery-service:8761/eureka
#      - KEYCLOAK_URL=http://keycloak:8080
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - zingmp3-net

networks:
  zingmp3-net:
    name: zingmp3-net