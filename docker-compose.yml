version: '3.8'
services:
  ## Keycloak
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0.3
    command: [ "start-dev", "--import-realm" ]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: mysql
      KC_DB_URL_HOST: mysql-keycloak
      KC_DB_URL_DATABASE: keycloak
      KC_DB_URL_PORT: 3307
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak-secret
    ports:
      - "8080:8080"
    depends_on:
      mysql-keycloak:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import
    networks:
      - zingmp3-net

  # mysql-keycloak
  mysql-keycloak:
    container_name: mysql-keycloak
    image: mysql
    environment:
      MYSQL_ROOT_HOSTS: '%'
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: keycloak-secret
      MYSQL_ROOT_PASSWORD: supersecret
      MYSQL_TCP_PORT: 3307
    ports:
      - "3307:3307"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
    networks:
      - zingmp3-net
    volumes:
      - ./database/mysql-keycloak:/var/lib/mysql

#  mysql-playlist:
#    container_name: mysql-playlist
#    image: mysql
#    environment:
#      MYSQL_HOST: '%'
#      MYSQL_ROOT_PASSWORD: password
#      MYSQL_DATABASE: playlist_service
#      MYSQL_USER: zingmp3
#      MYSQL_PASSWORD: zingmp3
#      MYSQL_TCP_PORT: 3308
#    volumes:
#      - ./database/mysql-playlist:/data/mysql
#    ports:
#      - "3308:3308"
#    restart: always
#    networks:
#      - zingmp3-net
#    healthcheck:
#      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]

  discovery-service:
    container_name: discovery-service
    image: ngoxuanchien/discovery-service:latest
    restart: always
    ports:
      - "8761:8761"
    networks:
      - zingmp3-net

#  playlist-service:
#    depends_on:
#      mysql-playlist:
#        condition: service_healthy
#    container_name: playlist-service
#    image: ngoxuanchien/playlist-service:latest
#    restart: always
#    environment:
#      SPRING_R2DBC_SERVER: mysql-playlist
#      SPRING_R2DBC_USERNAME: zingmp3
#      SPRING_R2DBC_PASSWORD: zingmp3
#      SPRING_R2DBC_PORT: 3308
#      SPRING_R2DBC_NAME: playlist_service
#
#      SERVER_HOST: nxc-hcmus.me:8081
#      SERVER_URL: http://nxc-hcmus.me:8081
#
#      EUREKA_SERVICE-URL: http://discovery-service:8761/eureka/
#
#      KEYCLOAK_ISSUER-URI: http://keycloak:8080/realms/zing-mp3
#    networks:
#      - zingmp3-net

  api-gateway:
    container_name: api-gateway
#    depends_on:
#      keycloak:
#        condition: service_healthy
    image: ngoxuanchien/api-gateway:latest
    restart: always
    ports:
      - "8081:8081"
    networks:
      - zingmp3-net
    environment:
      SERVER_HOST: nxc-hcmus.me:8081
      EUREKA_SERVICE-URL: http://discovery-service:8761/eureka/
      KEYCLOAK_ISSUER-URI: http://keycloak:8080/realms/zing-mp3
      KEYCLOAK_OPENID-CONNECT: http://keycloak:8080/realms/zing-mp3/protocol/openid-connect/

  user-service:
    container_name: user-service
    image: ngoxuanchien/user-service:latest
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - zingmp3-net

  mysql-music:
    container_name: mysql-music
    image: mysql
    environment:
      MYSQL_ROOT_HOSTS: '%'
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: music_service
      MYSQL_USER: zingmp3
      MYSQL_PASSWORD: zingmp3
      MYSQL_TCP_PORT: 3309
    restart: always
    volumes:
      - ./database/mysql-music:/data/mysql
    ports:
      - "3309:3309"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
    networks:
      - zingmp3-net

  mysql-content_delivery:
    container_name: mysql-content_delivery
    image: mysql
    environment:
      MYSQL_HOST: '%'
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: content_delivery
      MYSQL_USER: zingmp3
      MYSQL_PASSWORD: zingmp3
      MYSQL_TCP_PORT: 3310
    volumes:
      - ./database/mysql-content_delivery:/data/mysql
    ports:
      - "3310:3310"
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
    networks:
      zingmp3-net:

  content-delivery-service:
    container_name: content-delivery-service
    depends_on:
      mysql-content_delivery:
        condition: service_healthy
    image: ngoxuanchien/content-delivery-service:latest
    restart: always
    environment:
      SPRING_DATASOURCE_USERNAME: zingmp3
      SPRING_DATASOURCE_PASSWORD: zingmp3
      SPRING_DATASOURCE_SERVER: mysql-content_delivery
      SPRING_DATASOURCE_PORT: 3310
      SPRING_DATASOURCE_NAME: content_delivery

      SERVER_PORT: 0
      GATEWAY_URL: http://nxc-hcmus.me:8081
      EUREKA_SERVICE_URL: http://discovery-service:8761/eureka/
      GRPC_SERVER_PORT: 0
    networks:
      - zingmp3-net

  music-service:
    depends_on:
      mysql-music:
        condition: service_healthy
    container_name: music-service
    image: ngoxuanchien/music-service:latest
    restart: always
    environment:
      SPRING_DATASOURCE_USERNAME: zingmp3
      SPRING_DATASOURCE_PASSWORD: zingmp3
      SPRING_DATASOURCE_SERVER: mysql-music
      SPRING_DATASOURCE_PORT: 3309
      SPRING_DATASOURCE_NAME: music_service

      SERVER_PORT: 0

      KEYCLOAK_PORT: 8080
      KEYCLOAK_SERVER: keycloak
      KEYCLOAK_CLIENT_ID: music-service
      KEYCLOAK_CLIENT_SECRET: VkkYcgHZEnyEbKNBr0Ca1uit4i1iORz7
      KEYCLOAK_TOKEN: http://localhost:8081/api/auth/token
      KEYCLOAK_ISSUER-URI: http://keycloak:8080/realms/zing-mp3

      EUREKA_PORT: 8761
      EUREKA_SERVER: discovery-service

      GRPC_SERVER_PORT: 0
    networks:
      - zingmp3-net
networks:
  zingmp3-net:
    name: zingmp3-net