version: '3.8'
services:
  ## Keycloak
  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql
    volumes:
      - ./database/mysql-keycloak:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
    restart: always
    networks:
      - zingmp3-net

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0.2
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import
    depends_on:
      - keycloak-mysql
    networks:
      - zingmp3-net
    restart: always

  mysql-song:
    container_name: mysql-song
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: song_service
      MYSQL_USER: zingmp3
      MYSQL_PASSWORD: zingmp3
      MYSQL_TCP_PORT: 3306
    ports:
      - "3306:3306"
    restart: always
    networks:
      - zingmp3-net


#  mysql-playlist:
#    container_name: mysql-playlist
#    image: mysql
#    environment:
#      MYSQL_ROOT_PASSWORD: password
#      MYSQL_DATABASE: playlist_service
#      MYSQL_USER: zingmp3
#      MYSQL_PASSWORD: zingmp3
#      MYSQL_TCP_PORT: 3307
#    volumes:
#      - ./database/mysql-playlist:/data/mysql
#    ports:
#      - "3307:3307"
#    restart: always
#    networks:
#      - zingmp3-net

  song-service:
    depends_on:
      - mysql-song
      - discovery-service
    container_name: song-service
    build:
      context: ./song-service
      dockerfile: Dockerfile
    image: ngoxuanchien/song-service:latest
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-song:3306/song_service
#      - EUREKA_CLIENT_SERVICE-URL_DEFAULT-ZONE=http://discovery-service:8761/eureka
    networks:
      - zingmp3-net
    stdin_open: true
    tty: true

#  playlist-service:
#    depends_on:
#      - mysql-playlist
#      - discovery-service
#    container_name: ngoxuanchien/playlist-service:latest
#    build:
#      context: ./playlist-service
#
#    image: playlist-service
#    restart: on-failure
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-playlist:3307/playlist_service
#    networks:
#      playlist-service-net:
#    stdin_open: true
#    tty: true

  discovery-service:
    container_name: discovery-service
    depends_on:
      - mysql-song
#      - mysql-playlist
      - keycloak-mysql
    build:
      context: ./discovery-service
      dockerfile: Dockerfile
    image: ngoxuanchien/discovery-service:latest
    restart: always
    ports:
      - "8761:8761"
    networks:
      - zingmp3-net

  search-service:
    container_name: search-service
    depends_on:
#      - mysql-playlist
#      - mysql-song
#      - keycloak-mysql
      - discovery-service
      - song-service
#      - playlist-service
#    build: ./search-service
    image: ngoxuanchien/search-service:latest
    build:
      context: ./search-service
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
#      - EUREKA_CLIENT_SERVICE-URL_DEFAULT-ZONE=http://discovery-service:8761/eureka
    restart: always
    networks:
      - zingmp3-net

  api-gateway:
    container_name: api-gateway
    depends_on:
      - mysql-song
      - keycloak-mysql
      - discovery-service
      - song-service
      - search-service
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: ngoxuanchien/api-gateway:latest
    restart: always
    ports:
      - "8081:8081"
    networks:
      - zingmp3-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  user-service:
    container_name: user-service
    image: ngoxuanchien/user-service:latest
    build:
      context: ./user-service
      dockerfile: Dockerfile
    restart: always
    environment:
#      - EUREKA_CLIENT_SERVICE-URL_DEFAULT-ZONE=http://discovery-service:8761/eureka
#      - KEYCLOAK_URL=http://keycloak:8080
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - zingmp3-net

networks:
  zingmp3-net:
    name: zingmp3-net