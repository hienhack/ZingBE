spring:
  application:
    name: music-command-service
  datasource:
    url: jdbc:mysql://${spring.datasource.server}:${spring.datasource.port}/${spring.datasource.name}
    username: ${SPRING_DATASOURCE_USERNAME:zingmp3}
    password: ${SPRING_DATASOURCE_PASSWORD:zingmp3}
    server: ${SPRING_DATASOURCE_SERVER:localhost}
    port: ${SPRING_DATASOURCE_PORT:3309}
    name: ${SPRING_DATASOURCE_NAME:music_service}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
  threads:
    virtual:
      enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER-URI:http://localhost:8080/realms/zing-mp3}
      client:
        registration:
          keycloak:
            client-id: ${KEYCLOAK_CLIENT_ID:music-service}
            client-secret: ${KEYCLOAK_CLIENT_SECRET:VkkYcgHZEnyEbKNBr0Ca1uit4i1iORz7}
  kafka:
    bootstrap-servers: ${KAFKA_SERVER:localhost}:${KAFKA_PORT:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema:
          registry:
            url: ${SCHEMA_REGISTRY_URL:http://localhost:8081}


server:
  port: ${SERVER_PORT:0}
eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_SERVER:localhost}:${EUREKA_PORT:8761}/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 20
topic:
  name: ${KAFKA_TOPIC:music-service-topic}