spring:
  application:
    name: content-delivery-service
  datasource:
    url: jdbc:mysql://${spring.datasource.server}:${spring.datasource.port}/${spring.datasource.name}
    username: ${SPRING_DATASOURCE_USERNAME:zingmp3}
    password: ${SPRING_DATASOURCE_PASSWORD:zingmp3}
    server: ${SPRING_DATASOURCE_SERVER:localhost}
    port: ${SPRING_DATASOURCE_PORT:3310}
    name: ${SPRING_DATASOURCE_NAME:content_delivery}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  threads:
    virtual:
      enabled: true
  servlet:
    multipart:
      max-file-size: 2GB
      max-request-size: 2GB
  output:
    ansi:
      enabled: always
server:
  port: ${SERVER_PORT:0}
  gateway-url: ${GATEWAY_URL:http://localhost:8081}
#  ssl:
#    enabled: true
#    key-store-type: PKCS12
#    key-store: classpath:keystore/keystore.p12
#    key-store-password: changeit
#    protocol: TLS
#    enabled-protocols: TLSv1.2
springdoc:
  swagger-ui:
    oauth:
      client-id: ${spring.security.oauth2.client.registration.keycloak.client-id}
      client-secret: ${spring.security.oauth2.client.registration.keycloak.client-secret}
    tags-sorter: alpha
    operations-sorter: method
    groups-order: asc
eureka:
  client:
    fetch-registry: false
    register-with-eureka: true
    service-url:
      defaultZone: ${EUREKA_SERVICE_URL:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 20
#logging:
#  level:
#    web: debug
#    org:
#      springframework:
#        web: debug
grpc:
  server:
    port: ${GRPC_SERVER_PORT:0}
#  client:
#    grpc-server:
#      address: 'discovery:///grpc-server'
#      negotiation-type: plaintext
