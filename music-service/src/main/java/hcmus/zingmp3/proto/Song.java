// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GrpcSong.proto

package hcmus.zingmp3.proto;

public final class Song {
  private Song() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hcmus_zingmp3_proto_SongAlias_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hcmus_zingmp3_proto_SongAlias_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hcmus_zingmp3_proto_SongId_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hcmus_zingmp3_proto_SongId_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hcmus_zingmp3_proto_SongResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hcmus_zingmp3_proto_SongResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nGrpcSong.proto\022\023hcmus.zingmp3.proto\032\014Artis" +
      "t.proto\032\013Genre.proto\"\032\n\tSongAlias\022\r\n\005ali" +
      "as\030\001 \001(\t\"\024\n\006SongId\022\n\n\002id\030\001 \001(\t\"\302\002\n\014SongR" +
      "esponse\022\n\n\002id\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022\r\n\005al" +
      "ias\030\003 \001(\t\022\022\n\nisOfficial\030\004 \001(\010\022\023\n\013artistN" +
      "ames\030\005 \001(\t\0224\n\007artists\030\006 \003(\0132#.hcmus.zing" +
      "mp3.proto.ArtistResponse\0222\n\006genres\030\007 \003(\013" +
      "2\".hcmus.zingmp3.proto.GenreResponse\0226\n\t" +
      "composers\030\010 \003(\0132#.hcmus.zingmp3.proto.Ar" +
      "tistResponse\022\023\n\013isWorldWide\030\t \001(\010\022\023\n\013rel" +
      "easeDate\030\n \001(\005\022\023\n\013distributor\030\013 \001(\t2\255\001\n\013" +
      "SongService\022M\n\013getSongById\022\033.hcmus.zingm" +
      "p3.proto.SongId\032!.hcmus.zingmp3.proto.So" +
      "ngResponse\022O\n\020getSongIdByAlias\022\036.hcmus.z" +
      "ingmp3.proto.SongAlias\032\033.hcmus.zingmp3.p" +
      "roto.SongIdB\002P\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          hcmus.zingmp3.proto.Artist.getDescriptor(),
          hcmus.zingmp3.proto.Genre.getDescriptor(),
        });
    internal_static_hcmus_zingmp3_proto_SongAlias_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_hcmus_zingmp3_proto_SongAlias_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hcmus_zingmp3_proto_SongAlias_descriptor,
        new java.lang.String[] { "Alias", });
    internal_static_hcmus_zingmp3_proto_SongId_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_hcmus_zingmp3_proto_SongId_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hcmus_zingmp3_proto_SongId_descriptor,
        new java.lang.String[] { "Id", });
    internal_static_hcmus_zingmp3_proto_SongResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_hcmus_zingmp3_proto_SongResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hcmus_zingmp3_proto_SongResponse_descriptor,
        new java.lang.String[] { "Id", "Title", "Alias", "IsOfficial", "ArtistNames", "Artists", "Genres", "Composers", "IsWorldWide", "ReleaseDate", "Distributor", });
    hcmus.zingmp3.proto.Artist.getDescriptor();
    hcmus.zingmp3.proto.Genre.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
