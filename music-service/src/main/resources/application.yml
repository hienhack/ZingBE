spring:
  application:
    name: music-service
  flyway:
    enabled: true
    url: jdbc:mysql://${spring.r2dbc.server}:${spring.r2dbc.port}/${spring.r2dbc.name}
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    baseline-on-migrate: true
  r2dbc:
    url: r2dbc:mysql://${spring.r2dbc.server}:${spring.r2dbc.port}/${spring.r2dbc.name}
    username: ${SPRING_R2DBC_USERNAME:zingmp3}
    password: ${SPRING_R2DBC_PASSWORD:zingmp3}
    server: ${SPRING_R2DBC_SERVER:localhost}
    port: ${SPRING_R2DBC_PORT:3309}
    name: ${SPRING_R2DBC_NAME:music_service}
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${KEYCLOAK_CLIENT-ID:music-service}
            client-secret: ${KEYCLOAK_CLIENT-SECRET:VkkYcgHZEnyEbKNBr0Ca1uit4i1iORz7}
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER-URI:http://localhost:8080/realms/zing-mp3}
  data:
    web:
      pageable:
        default-page-size: 10
        max-page-size: 50
  codec:
    max-in-memory-size: 1GB
server:
  port: ${SERVER_PORT:0}
  host: ${SERVER_HOST:localhost:8081}
  url: ${SERVER_URL:http://localhost:8081}
springdoc:
  swagger-ui:
    tags-sorter: alpha
    operations-sorter: method
    oauth:
      client-id: ${spring.security.oauth2.client.registration.keycloak.client-id}
      client-secret: ${spring.security.oauth2.client.registration.keycloak.client-secret}
logging:
  level:
    org:
      springframework:
        r2dbc: debug
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVICE-URL:http://localhost:8761/eureka/}
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 20
keycloak:
  resource-id: ${spring.security.oauth2.client.registration.keycloak.client-id}
  token-url: ${server.url}/api/auth/token
playback:
  streaming-url: ${server.url}/api/playback/streaming/play/
  image:
    song: ${server.url}/api/playback/image/song/
    artist: ${server.url}/api/playback/image/artist/

