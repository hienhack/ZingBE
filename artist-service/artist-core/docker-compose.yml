networks:
  zingmp3-net:
    name: zingmp3-net
    driver: bridge

services:
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0.3
    command: [ "start-dev", "--import-realm" ]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: mysql
      KC_DB_URL_HOST: mysql-keycloak
      KC_DB_URL_DATABASE: keycloak
      KC_DB_URL_PORT: 3307
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak-secret
    ports:
      - "8080:8080"
    depends_on:
      mysql-keycloak:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import
    networks:
      zingmp3-net:

  mysql-keycloak:
    container_name: mysql-keycloak
    image: mysql
    environment:
      MYSQL_ROOT_HOSTS: '%'
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: keycloak-secret
      MYSQL_ROOT_PASSWORD: supersecret
      MYSQL_TCP_PORT: 3307
    ports:
      - "3307:3307"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
    networks:
      zingmp3-net:
    volumes:
      - ./database/mysql-keycloak:/var/lib/mysql

  api-gateway:
    container_name: api-gateway
    #    depends_on:
    #      keycloak:
    #        condition: service_healthy
    image: ngoxuanchien/api-gateway:latest
    restart: always
    ports:
      - "8081:8081"
    networks:
      zingmp3-net:
    environment:
      SERVER_HOST: nxc-hcmus.me:8081
      EUREKA_SERVICE-URL: http://discovery-service:8761/eureka/
      KEYCLOAK_ISSUER-URI: http://keycloak:8080/realms/zing-mp3
      KEYCLOAK_OPENID-CONNECT: http://keycloak:8080/realms/zing-mp3/protocol/openid-connect/

  user-service:
    container_name: user-service
    image: ngoxuanchien/user-service:latest
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      zingmp3-net:

  discovery-service:
    container_name: discovery-service
    image: ngoxuanchien/discovery-service:latest
    restart: always
    ports:
      - "8761:8761"
    networks:
      zingmp3-net:

  zoo1:
    image: confluentinc/cp-zookeeper
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888
    networks:
      zingmp3-net:
  zoo2:
    image: confluentinc/cp-zookeeper
    hostname: zoo2
    container_name: zoo2
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888
    networks:
      zingmp3-net:
  zoo3:
    image: confluentinc/cp-zookeeper
    hostname: zoo3
    container_name: zoo3
    ports:
      - "2183:2183"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2183
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888
    networks:
      zingmp3-net:

  kafka1:
    image: confluentinc/cp-kafka
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://127.0.0.1:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092,DOCKER://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    networks:
      zingmp3-net:

  kafka2:
    image: confluentinc/cp-kafka
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:19093,EXTERNAL://127.0.0.1:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19093,EXTERNAL://0.0.0.0:9093,DOCKER://0.0.0.0:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    networks:
      zingmp3-net:

  kafka3:
    image: confluentinc/cp-kafka
    hostname: kafka3
    container_name: kafka3
    ports:
      - "9094:9094"
      - "29094:29094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:19094,EXTERNAL://127.0.0.1:9094,DOCKER://host.docker.internal:29094
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19094,EXTERNAL://0.0.0.0:9094,DOCKER://0.0.0.0:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    networks:
      zingmp3-net:

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry
    hostname: kafka-schema-registry
    container_name: kafka-schema-registry
    depends_on:
      - zoo1
      - zoo2
      - zoo3
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "8081:8081"
    environment:
      SECURITY_PROTOCOL: PLAINTEXT
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka1:19092,PLAINTEXT://kafka2:19093,PLAINTEXT://kafka3:19094'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      zingmp3-net:
  mysql-artist:
    container_name: mysql-artist
    image: mysql
    environment:
      MYSQL_HOST: '%'
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: artist_service
      MYSQL_USER: zingmp3
      MYSQL_PASSWORD: zingmp3
      MYSQL_TCP_PORT: 3336
    volumes:
      - ./database/artist_service:/data/mysql
    ports:
      - "3336:3336"
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
    networks:
      zingmp3-net:

  mysql-image:
    container_name: mysql-image
    image: mysql
    environment:
      MYSQL_HOST: '%'
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: image_service
      MYSQL_USER: zingmp3
      MYSQL_PASSWORD: zingmp3
      MYSQL_TCP_PORT: 3333
    volumes:
      - ./database/image_service:/data/mysql
    ports:
      - "3333:3333"
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
    networks:
      zingmp3-net:

  image-service:
    container_name: image-service
    depends_on:
      mysql-image:
        condition: service_healthy
    image: ngoxuanchien/image-service
    networks:
      zingmp3-net:
    environment:
      SPRING_DATASOURCE_USERNAME: zingmp3
      SPRING_DATASOURCE_PASSWORD: zingmp3
      SPRING_DATASOURCE_SERVER: mysql-image
      SPRING_DATASOURCE_PORT: 3334
      SPRING_DATASOURCE_NAME: audio_service
      SERVER_PORT: 0

      EUREKA_SERVER: discovery-service
      EUREKA_PORT: 8761
      MEDIA_URL: http://nxc-hcmus.me:8081/api/play/

  media-service:
    container_name: media-service
    depends_on:
      mysql-media:
        condition: service_healthy
    image: ngoxuanchien/media-service
    networks:
      zingmp3-net:
    environment:
      SPRING_DATASOURCE_USERNAME: zingmp3
      SPRING_DATASOURCE_PASSWORD: zingmp3
      SPRING_DATASOURCE_SERVER: mysql-media
      SPRING_DATASOURCE_PORT: 3334
      SPRING_DATASOURCE_NAME: media_service
      SERVER_PORT: 0

      EUREKA_SERVER: discovery-service
      EUREKA_PORT: 8761
      GATEWAY_URL: http://nxc-hcmus.me:8081

  mysql-media:
    container_name: mysql-media
    image: mysql
    environment:
      MYSQL_HOST: '%'
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: media_service
      MYSQL_USER: zingmp3
      MYSQL_PASSWORD: zingmp3
      MYSQL_TCP_PORT: 3334
    volumes:
      - ./database/media_service:/data/mysql
    ports:
      - "3334:3334"
    restart: always
    networks:
      zingmp3-net:

  artist-core:
    container_name: artist-core
    image: ngoxuanchien/artist-core
    depends_on:
      mysql-artist:
        condition: service_healthy
#    restart: always
    networks:
      zingmp3-net:
    environment:
      SPRING_DATASOURCE_USERNAME: zingmp3
      SPRING_DATASOURCE_PASSWORD: zingmp3
      SPRING_DATASOURCE_SERVER: mysql-artist
      SPRING_DATASOURCE_PORT: 3336
      SPRING_DATASOURCE_NAME: artist_service
      SERVER_PORT: 0

      GRPC_SERVER_PORT: 0

      KEYCLOAK_PORT: 8080
      KEYCLOAK_SERVER: localhost
      KEYCLOAK_CLIENT_ID: music-service
      KEYCLOAK_CLIENT_SECRET: VkkYcgHZEnyEbKNBr0Ca1uit4i1iORz7
      KEYCLOAK_TOKEN_URL: http://localhost:8081/api/auth/token
      KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/zing-mp3

      EUREKA_PORT: 8761
      EUREKA_SERVER: discovery-service

      GATEWAY_URL: http://localhost:8080

      BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka1:19092,PLAINTEXT://kafka2:19093,PLAINTEXT://kafka3:19094'

  artist-event-handler:
    container_name: artist-event-handler
    image: ngoxuanchien/artist-event-handler
    depends_on:
      mysql-artist:
        condition: service_healthy
    networks:
      zingmp3-net:
#    restart: always
    environment:
      SPRING_DATASOURCE_USERNAME: zingmp3
      SPRING_DATASOURCE_PASSWORD: zingmp3
      SPRING_DATASOURCE_SERVER: mysql-artist
      SPRING_DATASOURCE_PORT: 3336
      SPRING_DATASOURCE_NAME: artist_service

      BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka1:19092,PLAINTEXT://kafka2:19093,PLAINTEXT://kafka3:19094'
