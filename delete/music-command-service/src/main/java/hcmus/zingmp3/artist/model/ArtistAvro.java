/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package hcmus.zingmp3.artist.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ArtistAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1641296547910053051L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ArtistAvro\",\"namespace\":\"hcmus.zingmp3.artist.model\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"playlistId\",\"type\":[\"string\",\"null\"]},{\"name\":\"thumbnail\",\"type\":\"string\"},{\"name\":\"totalFollow\",\"type\":\"int\"},{\"name\":\"sortBiography\",\"type\":[\"string\",\"null\"]},{\"name\":\"biography\",\"type\":[\"string\",\"null\"]},{\"name\":\"national\",\"type\":[\"string\",\"null\"]},{\"name\":\"realName\",\"type\":[\"string\",\"null\"]},{\"name\":\"birthday\",\"type\":[\"string\",\"null\"]},{\"name\":\"awards\",\"type\":[{\"type\":\"array\",\"items\":\"string\",\"default\":[]},\"null\"]},{\"name\":\"songs\",\"type\":[{\"type\":\"array\",\"items\":\"string\",\"default\":[]},\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ArtistAvro> ENCODER =
      new BinaryMessageEncoder<ArtistAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ArtistAvro> DECODER =
      new BinaryMessageDecoder<ArtistAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ArtistAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ArtistAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ArtistAvro>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ArtistAvro to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ArtistAvro from a ByteBuffer. */
  public static ArtistAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence alias;
  @Deprecated public java.lang.CharSequence playlistId;
  @Deprecated public java.lang.CharSequence thumbnail;
  @Deprecated public int totalFollow;
  @Deprecated public java.lang.CharSequence sortBiography;
  @Deprecated public java.lang.CharSequence biography;
  @Deprecated public java.lang.CharSequence national;
  @Deprecated public java.lang.CharSequence realName;
  @Deprecated public java.lang.CharSequence birthday;
  @Deprecated public java.util.List<java.lang.CharSequence> awards;
  @Deprecated public java.util.List<java.lang.CharSequence> songs;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ArtistAvro() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param name The new value for name
   * @param alias The new value for alias
   * @param playlistId The new value for playlistId
   * @param thumbnail The new value for thumbnail
   * @param totalFollow The new value for totalFollow
   * @param sortBiography The new value for sortBiography
   * @param biography The new value for biography
   * @param national The new value for national
   * @param realName The new value for realName
   * @param birthday The new value for birthday
   * @param awards The new value for awards
   * @param songs The new value for songs
   */
  public ArtistAvro(java.lang.CharSequence id, java.lang.CharSequence name, java.lang.CharSequence alias, java.lang.CharSequence playlistId, java.lang.CharSequence thumbnail, java.lang.Integer totalFollow, java.lang.CharSequence sortBiography, java.lang.CharSequence biography, java.lang.CharSequence national, java.lang.CharSequence realName, java.lang.CharSequence birthday, java.util.List<java.lang.CharSequence> awards, java.util.List<java.lang.CharSequence> songs) {
    this.id = id;
    this.name = name;
    this.alias = alias;
    this.playlistId = playlistId;
    this.thumbnail = thumbnail;
    this.totalFollow = totalFollow;
    this.sortBiography = sortBiography;
    this.biography = biography;
    this.national = national;
    this.realName = realName;
    this.birthday = birthday;
    this.awards = awards;
    this.songs = songs;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return alias;
    case 3: return playlistId;
    case 4: return thumbnail;
    case 5: return totalFollow;
    case 6: return sortBiography;
    case 7: return biography;
    case 8: return national;
    case 9: return realName;
    case 10: return birthday;
    case 11: return awards;
    case 12: return songs;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: alias = (java.lang.CharSequence)value$; break;
    case 3: playlistId = (java.lang.CharSequence)value$; break;
    case 4: thumbnail = (java.lang.CharSequence)value$; break;
    case 5: totalFollow = (java.lang.Integer)value$; break;
    case 6: sortBiography = (java.lang.CharSequence)value$; break;
    case 7: biography = (java.lang.CharSequence)value$; break;
    case 8: national = (java.lang.CharSequence)value$; break;
    case 9: realName = (java.lang.CharSequence)value$; break;
    case 10: birthday = (java.lang.CharSequence)value$; break;
    case 11: awards = (java.util.List<java.lang.CharSequence>)value$; break;
    case 12: songs = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'alias' field.
   * @return The value of the 'alias' field.
   */
  public java.lang.CharSequence getAlias() {
    return alias;
  }

  /**
   * Sets the value of the 'alias' field.
   * @param value the value to set.
   */
  public void setAlias(java.lang.CharSequence value) {
    this.alias = value;
  }

  /**
   * Gets the value of the 'playlistId' field.
   * @return The value of the 'playlistId' field.
   */
  public java.lang.CharSequence getPlaylistId() {
    return playlistId;
  }

  /**
   * Sets the value of the 'playlistId' field.
   * @param value the value to set.
   */
  public void setPlaylistId(java.lang.CharSequence value) {
    this.playlistId = value;
  }

  /**
   * Gets the value of the 'thumbnail' field.
   * @return The value of the 'thumbnail' field.
   */
  public java.lang.CharSequence getThumbnail() {
    return thumbnail;
  }

  /**
   * Sets the value of the 'thumbnail' field.
   * @param value the value to set.
   */
  public void setThumbnail(java.lang.CharSequence value) {
    this.thumbnail = value;
  }

  /**
   * Gets the value of the 'totalFollow' field.
   * @return The value of the 'totalFollow' field.
   */
  public java.lang.Integer getTotalFollow() {
    return totalFollow;
  }

  /**
   * Sets the value of the 'totalFollow' field.
   * @param value the value to set.
   */
  public void setTotalFollow(java.lang.Integer value) {
    this.totalFollow = value;
  }

  /**
   * Gets the value of the 'sortBiography' field.
   * @return The value of the 'sortBiography' field.
   */
  public java.lang.CharSequence getSortBiography() {
    return sortBiography;
  }

  /**
   * Sets the value of the 'sortBiography' field.
   * @param value the value to set.
   */
  public void setSortBiography(java.lang.CharSequence value) {
    this.sortBiography = value;
  }

  /**
   * Gets the value of the 'biography' field.
   * @return The value of the 'biography' field.
   */
  public java.lang.CharSequence getBiography() {
    return biography;
  }

  /**
   * Sets the value of the 'biography' field.
   * @param value the value to set.
   */
  public void setBiography(java.lang.CharSequence value) {
    this.biography = value;
  }

  /**
   * Gets the value of the 'national' field.
   * @return The value of the 'national' field.
   */
  public java.lang.CharSequence getNational() {
    return national;
  }

  /**
   * Sets the value of the 'national' field.
   * @param value the value to set.
   */
  public void setNational(java.lang.CharSequence value) {
    this.national = value;
  }

  /**
   * Gets the value of the 'realName' field.
   * @return The value of the 'realName' field.
   */
  public java.lang.CharSequence getRealName() {
    return realName;
  }

  /**
   * Sets the value of the 'realName' field.
   * @param value the value to set.
   */
  public void setRealName(java.lang.CharSequence value) {
    this.realName = value;
  }

  /**
   * Gets the value of the 'birthday' field.
   * @return The value of the 'birthday' field.
   */
  public java.lang.CharSequence getBirthday() {
    return birthday;
  }

  /**
   * Sets the value of the 'birthday' field.
   * @param value the value to set.
   */
  public void setBirthday(java.lang.CharSequence value) {
    this.birthday = value;
  }

  /**
   * Gets the value of the 'awards' field.
   * @return The value of the 'awards' field.
   */
  public java.util.List<java.lang.CharSequence> getAwards() {
    return awards;
  }

  /**
   * Sets the value of the 'awards' field.
   * @param value the value to set.
   */
  public void setAwards(java.util.List<java.lang.CharSequence> value) {
    this.awards = value;
  }

  /**
   * Gets the value of the 'songs' field.
   * @return The value of the 'songs' field.
   */
  public java.util.List<java.lang.CharSequence> getSongs() {
    return songs;
  }

  /**
   * Sets the value of the 'songs' field.
   * @param value the value to set.
   */
  public void setSongs(java.util.List<java.lang.CharSequence> value) {
    this.songs = value;
  }

  /**
   * Creates a new ArtistAvro RecordBuilder.
   * @return A new ArtistAvro RecordBuilder
   */
  public static hcmus.zingmp3.artist.model.ArtistAvro.Builder newBuilder() {
    return new hcmus.zingmp3.artist.model.ArtistAvro.Builder();
  }

  /**
   * Creates a new ArtistAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ArtistAvro RecordBuilder
   */
  public static hcmus.zingmp3.artist.model.ArtistAvro.Builder newBuilder(hcmus.zingmp3.artist.model.ArtistAvro.Builder other) {
    return new hcmus.zingmp3.artist.model.ArtistAvro.Builder(other);
  }

  /**
   * Creates a new ArtistAvro RecordBuilder by copying an existing ArtistAvro instance.
   * @param other The existing instance to copy.
   * @return A new ArtistAvro RecordBuilder
   */
  public static hcmus.zingmp3.artist.model.ArtistAvro.Builder newBuilder(hcmus.zingmp3.artist.model.ArtistAvro other) {
    return new hcmus.zingmp3.artist.model.ArtistAvro.Builder(other);
  }

  /**
   * RecordBuilder for ArtistAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ArtistAvro>
    implements org.apache.avro.data.RecordBuilder<ArtistAvro> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence name;
    private java.lang.CharSequence alias;
    private java.lang.CharSequence playlistId;
    private java.lang.CharSequence thumbnail;
    private int totalFollow;
    private java.lang.CharSequence sortBiography;
    private java.lang.CharSequence biography;
    private java.lang.CharSequence national;
    private java.lang.CharSequence realName;
    private java.lang.CharSequence birthday;
    private java.util.List<java.lang.CharSequence> awards;
    private java.util.List<java.lang.CharSequence> songs;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(hcmus.zingmp3.artist.model.ArtistAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.alias)) {
        this.alias = data().deepCopy(fields()[2].schema(), other.alias);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.playlistId)) {
        this.playlistId = data().deepCopy(fields()[3].schema(), other.playlistId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.thumbnail)) {
        this.thumbnail = data().deepCopy(fields()[4].schema(), other.thumbnail);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.totalFollow)) {
        this.totalFollow = data().deepCopy(fields()[5].schema(), other.totalFollow);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sortBiography)) {
        this.sortBiography = data().deepCopy(fields()[6].schema(), other.sortBiography);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.biography)) {
        this.biography = data().deepCopy(fields()[7].schema(), other.biography);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.national)) {
        this.national = data().deepCopy(fields()[8].schema(), other.national);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.realName)) {
        this.realName = data().deepCopy(fields()[9].schema(), other.realName);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.birthday)) {
        this.birthday = data().deepCopy(fields()[10].schema(), other.birthday);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.awards)) {
        this.awards = data().deepCopy(fields()[11].schema(), other.awards);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.songs)) {
        this.songs = data().deepCopy(fields()[12].schema(), other.songs);
        fieldSetFlags()[12] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ArtistAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(hcmus.zingmp3.artist.model.ArtistAvro other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.alias)) {
        this.alias = data().deepCopy(fields()[2].schema(), other.alias);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.playlistId)) {
        this.playlistId = data().deepCopy(fields()[3].schema(), other.playlistId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.thumbnail)) {
        this.thumbnail = data().deepCopy(fields()[4].schema(), other.thumbnail);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.totalFollow)) {
        this.totalFollow = data().deepCopy(fields()[5].schema(), other.totalFollow);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sortBiography)) {
        this.sortBiography = data().deepCopy(fields()[6].schema(), other.sortBiography);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.biography)) {
        this.biography = data().deepCopy(fields()[7].schema(), other.biography);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.national)) {
        this.national = data().deepCopy(fields()[8].schema(), other.national);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.realName)) {
        this.realName = data().deepCopy(fields()[9].schema(), other.realName);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.birthday)) {
        this.birthday = data().deepCopy(fields()[10].schema(), other.birthday);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.awards)) {
        this.awards = data().deepCopy(fields()[11].schema(), other.awards);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.songs)) {
        this.songs = data().deepCopy(fields()[12].schema(), other.songs);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'alias' field.
      * @return The value.
      */
    public java.lang.CharSequence getAlias() {
      return alias;
    }

    /**
      * Sets the value of the 'alias' field.
      * @param value The value of 'alias'.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder setAlias(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.alias = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'alias' field has been set.
      * @return True if the 'alias' field has been set, false otherwise.
      */
    public boolean hasAlias() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'alias' field.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder clearAlias() {
      alias = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'playlistId' field.
      * @return The value.
      */
    public java.lang.CharSequence getPlaylistId() {
      return playlistId;
    }

    /**
      * Sets the value of the 'playlistId' field.
      * @param value The value of 'playlistId'.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder setPlaylistId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.playlistId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'playlistId' field has been set.
      * @return True if the 'playlistId' field has been set, false otherwise.
      */
    public boolean hasPlaylistId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'playlistId' field.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder clearPlaylistId() {
      playlistId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'thumbnail' field.
      * @return The value.
      */
    public java.lang.CharSequence getThumbnail() {
      return thumbnail;
    }

    /**
      * Sets the value of the 'thumbnail' field.
      * @param value The value of 'thumbnail'.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder setThumbnail(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.thumbnail = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'thumbnail' field has been set.
      * @return True if the 'thumbnail' field has been set, false otherwise.
      */
    public boolean hasThumbnail() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'thumbnail' field.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder clearThumbnail() {
      thumbnail = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalFollow' field.
      * @return The value.
      */
    public java.lang.Integer getTotalFollow() {
      return totalFollow;
    }

    /**
      * Sets the value of the 'totalFollow' field.
      * @param value The value of 'totalFollow'.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder setTotalFollow(int value) {
      validate(fields()[5], value);
      this.totalFollow = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'totalFollow' field has been set.
      * @return True if the 'totalFollow' field has been set, false otherwise.
      */
    public boolean hasTotalFollow() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'totalFollow' field.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder clearTotalFollow() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'sortBiography' field.
      * @return The value.
      */
    public java.lang.CharSequence getSortBiography() {
      return sortBiography;
    }

    /**
      * Sets the value of the 'sortBiography' field.
      * @param value The value of 'sortBiography'.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder setSortBiography(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.sortBiography = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'sortBiography' field has been set.
      * @return True if the 'sortBiography' field has been set, false otherwise.
      */
    public boolean hasSortBiography() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'sortBiography' field.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder clearSortBiography() {
      sortBiography = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'biography' field.
      * @return The value.
      */
    public java.lang.CharSequence getBiography() {
      return biography;
    }

    /**
      * Sets the value of the 'biography' field.
      * @param value The value of 'biography'.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder setBiography(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.biography = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'biography' field has been set.
      * @return True if the 'biography' field has been set, false otherwise.
      */
    public boolean hasBiography() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'biography' field.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder clearBiography() {
      biography = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'national' field.
      * @return The value.
      */
    public java.lang.CharSequence getNational() {
      return national;
    }

    /**
      * Sets the value of the 'national' field.
      * @param value The value of 'national'.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder setNational(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.national = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'national' field has been set.
      * @return True if the 'national' field has been set, false otherwise.
      */
    public boolean hasNational() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'national' field.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder clearNational() {
      national = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'realName' field.
      * @return The value.
      */
    public java.lang.CharSequence getRealName() {
      return realName;
    }

    /**
      * Sets the value of the 'realName' field.
      * @param value The value of 'realName'.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder setRealName(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.realName = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'realName' field has been set.
      * @return True if the 'realName' field has been set, false otherwise.
      */
    public boolean hasRealName() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'realName' field.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder clearRealName() {
      realName = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'birthday' field.
      * @return The value.
      */
    public java.lang.CharSequence getBirthday() {
      return birthday;
    }

    /**
      * Sets the value of the 'birthday' field.
      * @param value The value of 'birthday'.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder setBirthday(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.birthday = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'birthday' field has been set.
      * @return True if the 'birthday' field has been set, false otherwise.
      */
    public boolean hasBirthday() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'birthday' field.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder clearBirthday() {
      birthday = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'awards' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getAwards() {
      return awards;
    }

    /**
      * Sets the value of the 'awards' field.
      * @param value The value of 'awards'.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder setAwards(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[11], value);
      this.awards = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'awards' field has been set.
      * @return True if the 'awards' field has been set, false otherwise.
      */
    public boolean hasAwards() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'awards' field.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder clearAwards() {
      awards = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'songs' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getSongs() {
      return songs;
    }

    /**
      * Sets the value of the 'songs' field.
      * @param value The value of 'songs'.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder setSongs(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[12], value);
      this.songs = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'songs' field has been set.
      * @return True if the 'songs' field has been set, false otherwise.
      */
    public boolean hasSongs() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'songs' field.
      * @return This builder.
      */
    public hcmus.zingmp3.artist.model.ArtistAvro.Builder clearSongs() {
      songs = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ArtistAvro build() {
      try {
        ArtistAvro record = new ArtistAvro();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.alias = fieldSetFlags()[2] ? this.alias : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.playlistId = fieldSetFlags()[3] ? this.playlistId : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.thumbnail = fieldSetFlags()[4] ? this.thumbnail : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.totalFollow = fieldSetFlags()[5] ? this.totalFollow : (java.lang.Integer) defaultValue(fields()[5]);
        record.sortBiography = fieldSetFlags()[6] ? this.sortBiography : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.biography = fieldSetFlags()[7] ? this.biography : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.national = fieldSetFlags()[8] ? this.national : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.realName = fieldSetFlags()[9] ? this.realName : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.birthday = fieldSetFlags()[10] ? this.birthday : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.awards = fieldSetFlags()[11] ? this.awards : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[11]);
        record.songs = fieldSetFlags()[12] ? this.songs : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[12]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ArtistAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<ArtistAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ArtistAvro>
    READER$ = (org.apache.avro.io.DatumReader<ArtistAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
