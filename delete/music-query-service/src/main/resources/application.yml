spring:
  application:
    name: music-query-service
  threads:
    virtual:
      enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER-URI:http://localhost:8080/realms/zing-mp3}
      client:
        registration:
          keycloak:
            client-id: ${KEYCLOAK_CLIENT_ID:music-service}
            client-secret: ${KEYCLOAK_CLIENT_SECRET:VkkYcgHZEnyEbKNBr0Ca1uit4i1iORz7}
  kafka:
    bootstrap-servers: ${KAFKA_SERVER:localhost}:${KAFKA_PORT:9092}
    consumer:
      group-id: ${KAFKA_GROUP_ID:music-service}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      auto-offset-reset: earliest
      properties:
        schema:
          registry:
            url: ${SCHEMA_REGISTRY_URL:http://localhost:8081}
        specific:
          avro:
            reader: true
server:
  port: ${SERVER_PORT:0}
eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_SERVER:localhost}:${EUREKA_PORT:8761}/eureka/
    fetch-registry: true
    register-with-eureka: true
    enabled: false
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 20
topic:
  name: ${KAFKA_TOPIC:music-service-topic}