spring:
  application:
    name: genre-command
  datasource:
    url: jdbc:mysql://${spring.datasource.server}:${spring.datasource.port}/${spring.datasource.name}
    username: ${SPRING_DATASOURCE_USERNAME:zingmp3}
    password: ${SPRING_DATASOURCE_PASSWORD:zingmp3}
    server: ${SPRING_DATASOURCE_SERVER:localhost}
    port: ${SPRING_DATASOURCE_PORT:3313}
    name: ${SPRING_DATASOURCE_NAME:genre_service}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  threads:
    virtual:
      enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER-URI:http://localhost:8080/realms/zing-mp3}
      client:
        registration:
          keycloak:
            client-id: ${KEYCLOAK_CLIENT_ID:music-service}
            client-secret: ${KEYCLOAK_CLIENT_SECRET:VkkYcgHZEnyEbKNBr0Ca1uit4i1iORz7}
  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVERS:localhost:9092,localhost:9093,localhost:9094}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema:
          registry:
            url: ${SCHEMA_REGISTRY_URL:http://localhost:8081}
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        schema:
          registry:
            url: ${SCHEMA_REGISTRY_URL:http://localhost:8081}
        specific:
          avro:
            reader: true
springdoc:
  swagger-ui:
    tags-sorter: alpha
    operations-sorter: method
    deep-linking: true
    oauth:
      client-id: ${spring.security.oauth2.client.registration.keycloak.client-id}
      client-secret: ${spring.security.oauth2.client.registration.keycloak.client-secret}
server:
  port: ${SERVER_PORT:0}
eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_SERVER:localhost}:${EUREKA_PORT:8761}/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 20
topic:
  name: ${KAFKA_TOPIC:genre-service}
#grpc:
#  client:
#    artist-query:
#      address: discovery:///artist-query
#      negotiation-type: plaintext
#  server:
#    port: ${GRPC_SERVER_PORT:0}
